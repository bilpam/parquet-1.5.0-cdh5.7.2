From 158e3d66cfbe9f5ee9b8f961414c4e770402b21c Mon Sep 17 00:00:00 2001
From: Steven She <steven@canopylabs.com>
Date: Thu, 25 Jun 2015 21:48:00 -0700
Subject: [PATCH 139/176] PARQUET-317: Fix writeMetadataFile crash when a
 relative root path is used

This commit ensures the fully-qualified path is used prior to calling mergeFooters(..).

Author: Steven She <steven@canopylabs.com>

Closes #228 from stevencanopy/relative-metadata-path and squashes the following commits:

988772b [Steven She] use outputPath.getFileSystem(...) to get the FS for the path
1cea508 [Steven She] PARQUET-317: Fix writeMetadataFile crash when a relative root path is used
---
 .../java/parquet/hadoop/ParquetFileWriter.java     |    2 +-
 .../java/parquet/hadoop/TestParquetFileWriter.java |   27 ++++++++++++++++++++
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java b/parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java
index efb0a5c..b8d0a4c 100644
--- a/parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java
+++ b/parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java
@@ -483,9 +483,9 @@ public class ParquetFileWriter {
    * @throws IOException
    */
   public static void writeMetadataFile(Configuration configuration, Path outputPath, List<Footer> footers) throws IOException {
-    ParquetMetadata metadataFooter = mergeFooters(outputPath, footers);
     FileSystem fs = outputPath.getFileSystem(configuration);
     outputPath = outputPath.makeQualified(fs);
+    ParquetMetadata metadataFooter = mergeFooters(outputPath, footers);
     writeMetadataFile(outputPath, metadataFooter, fs, PARQUET_METADATA_FILE);
     metadataFooter.getBlocks().clear();
     writeMetadataFile(outputPath, metadataFooter, fs, PARQUET_COMMON_METADATA_FILE);
diff --git a/parquet-hadoop/src/test/java/parquet/hadoop/TestParquetFileWriter.java b/parquet-hadoop/src/test/java/parquet/hadoop/TestParquetFileWriter.java
index 66ef481..6fd6685 100644
--- a/parquet-hadoop/src/test/java/parquet/hadoop/TestParquetFileWriter.java
+++ b/parquet-hadoop/src/test/java/parquet/hadoop/TestParquetFileWriter.java
@@ -63,6 +63,7 @@ import parquet.example.data.simple.SimpleGroup;
 
 import parquet.hadoop.example.GroupWriteSupport;
 import org.junit.rules.TemporaryFolder;
+import org.mockito.Mockito;
 
 public class TestParquetFileWriter {
 
@@ -713,4 +714,30 @@ public class TestParquetFileWriter {
     assertEquals("Should have all blocks", expected, merged.getBlocks());
   }
 
+  /**
+   * {@link ParquetFileWriter#mergeFooters(Path, List)} expects a fully-qualified
+   * path for the root and crashes if a relative one is provided.
+   */
+  @Test
+  public void testWriteMetadataFileWithRelativeOutputPath() throws IOException {
+    Configuration conf = new Configuration();
+    FileSystem fs = FileSystem.get(conf);
+    Path relativeRoot = new Path("target/_test_relative");
+    Path qualifiedRoot = fs.makeQualified(relativeRoot);
+
+    ParquetMetadata mock = Mockito.mock(ParquetMetadata.class);
+    FileMetaData fileMetaData = new FileMetaData(
+            new MessageType("root1",
+                new PrimitiveType(REPEATED, BINARY, "a")),
+            new HashMap<String, String>(), "test");
+    Mockito.when(mock.getFileMetaData()).thenReturn(fileMetaData);
+
+    List<Footer> footers = new ArrayList<Footer>();
+    Footer footer = new Footer(new Path(qualifiedRoot, "one"), mock);
+    footers.add(footer);
+
+    // This should not throw an exception
+    ParquetFileWriter.writeMetadataFile(conf, relativeRoot, footers);
+  }
+
 }
-- 
1.7.9.5

